apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

apply from: '../jacoco.gradle'
apply from: '../ktlint.gradle'
apply from: '../detekt.gradle'
apply from: '../checkstyle.gradle'
apply from: '../sonarcube.gradle'

final def localPropertiesFile = rootProject.file("local.properties")
final def localProperties = new Properties()

if (!localPropertiesFile.exists()) {
    localProperties.setProperty("RELEASE_STORE_PASSWORD", "")
    localProperties.setProperty("RELEASE_KEY_PASSWORD", "")
    localProperties.setProperty("RELEASE_KEY_ALIAS", "")
    localProperties.setProperty("RELEASE_STORE_FILE", "keystore.jks")
    final Writer writer = new FileWriter(localPropertiesFile, false)
    localProperties.store(writer, "empty, as creating the file is done manually via gpg")
    writer.close()

    file(project(':app').projectDir.path + "/keystore.jks").text = ""
}

localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdk 35

    signingConfigs {
        googleplay {
            keyAlias localProperties['RELEASE_KEY_ALIAS']
            keyPassword localProperties['RELEASE_KEY_PASSWORD']
            storeFile file(localProperties['RELEASE_STORE_FILE'])
            storePassword localProperties['RELEASE_STORE_PASSWORD']
        }
    }

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 35

        applicationId "com.github.jameshnsears.quoteunquote"

        // changelog version | min sdk | target sdk
        versionCode 1872435
        // semantic versioning
        versionName "4.49.1"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }

    buildFeatures {
        compose true
    }

    compose {
        codeGeneration {
            previewMode = PreviewMode.ON
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.15'
    }

    packagingOptions {
        resources {
            excludes += [
                    '**/module-info.class',
                    'LICENSE',
                    'README.md',
                    'META-INF/LICENSE.md',
                    'META-INF/LICENSE-notice.md'
            ]
        }
    }

    buildTypes {
        def gitHash = { ->
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'rev-parse', '--short=8', 'HEAD'
                standardOutput = stdout
            }
            return stdout.toString().trim()
        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("String", "GIT_HASH", "\"$gitHash\"")
            buildConfigField("String", "DATABASE_QUOTATIONS", "\"quotations.db.prod\"")

            ndk {
                debugSymbolLevel 'FULL'
            }
        }

        debug {
            buildConfigField("String", "GIT_HASH", "\"$gitHash\"")
            buildConfigField("String", "DATABASE_QUOTATIONS", "\"quotations.db.prod\"")
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = 17
    }

    flavorDimensions 'Version'
    productFlavors {
        'googleplay' {
            dimension 'Version'
            versionNameSuffix "-googleplay"
            signingConfig signingConfigs.googleplay
        }
        'fdroid' {
            dimension 'Version'
            versionNameSuffix "-fdroid"
            isDefault true
        }
        'espresso' {
            dimension 'Version'
            versionNameSuffix "-espresso"
        }
        'uiautomator' {
            dimension 'Version'
            versionNameSuffix "-uiautomator"
        }
    }

    sourceSets {
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
            assets.srcDirs += 'src/androidTest/assets/'
            java.srcDirs += 'src/androidTest/java'
            java.srcDirs += 'src/androidTest/kotlin'
        }
        fdroid {
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java', 'src/fdroid/java']
            kotlin.srcDirs = ['src/main/kotlin']
        }
        googleplay {
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java']
            kotlin.srcDirs = ['src/main/kotlin']
        }
        espresso {
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java']
            kotlin.srcDirs = ['src/main/kotlin']
        }
        uiautomator {
            assets.srcDirs = ['src/main/assets']
            java.srcDirs = ['src/main/java']
            kotlin.srcDirs = ['src/main/kotlin']
        }
    }

    testOptions {
        // will make tests run very slowly on the emulator/device + affects coverage #
        // execution 'ANDROIDX_TEST_ORCHESTRATOR'

        animationsDisabled true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                maxHeapSize = "1024m"
                jacoco {
                    includeNoLocationClasses = true
                    excludes = ['jdk.internal.*']
                }
            }
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }

    lint {
        disable 'InvalidPackage'
        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
        htmlReport true
        warningsAsErrors false
        baseline file("$rootDir/config/lint/baseline.xml")
        checkAllWarnings true
        htmlReport true
        xmlReport true
    }
    namespace 'com.github.jameshnsears.quoteunquote'
}

dependencies {
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4-android:1.7.8'
    androidTestImplementation 'androidx.room:room-testing:2.6.1'
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    androidTestImplementation 'io.mockk:mockk-android:1.13.17'
    androidTestImplementation 'org.jetbrains.kotlin:kotlin-test-junit:2.1.20'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'
    debugImplementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.fragment:fragment-testing:1.8.6'
    debugImplementation 'androidx.test:core-ktx:1.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'
    googleplayImplementation platform('com.google.firebase:firebase-bom:33.12.0')
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.databinding:databinding-runtime:8.9.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.room:room-guava:2.6.1'
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-rxjava2:2.6.1'
    implementation 'androidx.work:work-runtime:2.10.0'
    implementation 'androidx.work:work-runtime-ktx:2.10.0'
    implementation 'com.github.skydoves:colorpickerpreference:2.0.6'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'com.google.guava:guava:33.4.6-jre'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'net.pwall.json:json-kotlin-schema:0.56'

    // stay on 1.12.0, else on API 24: java.lang.NoClassDefFoundError: org.apache.commons.csv.CSVParser$Builder
    //noinspection GradleDependency
    implementation 'org.apache.commons:commons-csv:1.12.0'

    implementation 'org.jsoup:jsoup:1.19.1'
    implementation platform('androidx.compose:compose-bom:2025.03.01')
    implementation project(path: ':cloudLib')
    implementation project(path: ':utilsLib')
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'androidx.room:room-testing:2.6.1'
    testImplementation 'androidx.test:core-ktx:1.6.1'
    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation 'androidx.test:rules:1.6.1'
    testImplementation 'ch.qos.logback:logback-classic:1.5.18'
    testImplementation 'com.google.guava:guava:33.4.6-jre'
    testImplementation 'io.mockk:mockk:1.13.17'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.1'
    testImplementation 'org.robolectric:robolectric:4.14.1'
}

repositories {
    mavenCentral()
}
