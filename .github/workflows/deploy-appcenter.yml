name: deploy-appcenter

on:
  push:
    branches: [ main, qa ]
  pull_request:
    branches:

jobs:
  assembleGoogleplay:
    environment:
      name: appcenter.ms
      url: https://appcenter.ms/
    name: assembleGoogleplay
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "10.22.1"

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          LOCAL_PROPERTIES_CLOUDLIB: ${{ secrets.LOCAL_PROPERTIES_CLOUDLIB }}
          LOCAL_PROPERTIES_UTILSLIB: ${{ secrets.LOCAL_PROPERTIES_UTILSLIB }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties
          echo "${LOCAL_PROPERTIES_CLOUDLIB}" | base64 -d > QuoteUnquote.cloudLib/cloudLib/local.properties
          echo "${LOCAL_PROPERTIES_UTILSLIB}" | base64 -d > QuoteUnquote.utilsLib/utilsLib/local.properties

      - name: google-services.json
        env:
          GOOGLE_PLAY_JSON_DEVELOPMENT: ${{ secrets.GOOGLE_PLAY_JSON_DEVELOPMENT }}
        run: echo "${GOOGLE_PLAY_JSON_DEVELOPMENT}" | base64 -d > app/google-services.json

      - name: keystore.jks
        env:
          KEYSTORE_JKS: ${{ secrets.KEYSTORE_JKS }}
        run: echo "$KEYSTORE_JKS" | base64 -d > app/keystore.jks

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: assembleGoogleplay
        run: |
          set -x
          ./gradlew :app:assembleGoogleplay
          find . -name "*.apk" -print

      - name: show .gradle size
        run: |
          set -x
          du -h -d 1 ~/.gradle

      - name: appcenter-cli
        run: |
          set -x
          export GIT_HASH=$(git rev-parse --short HEAD)
          npm install -g yarn
          npm install -g appcenter-cli
          yarn
          appcenter login --token ${{ secrets.APPCENTER_ACCESS_TOKEN }}
          export APP_GOOGLEPLAY_DEBUG=app/build/outputs/apk/googleplay/debug/app-googleplay-debug.apk
          appcenter distribute release --app "jameshnsears/QuoteUnquote-Development" --file ${APP_GOOGLEPLAY_DEBUG} --group Collaborators --release-notes ${GIT_HASH} --token ${{ secrets.APPCENTER_ACCESS_TOKEN }} --silent
          export APP_GOOGLEPLAY_RELEASE_UNSIGNED=app/build/outputs/apk/googleplay/release/app-googleplay-release.apk
          appcenter distribute release --app "jameshnsears/QuoteUnquote-Production" --file ${APP_GOOGLEPLAY_RELEASE_UNSIGNED} --group Collaborators --release-notes ${GIT_HASH} --token ${{ secrets.APPCENTER_ACCESS_TOKEN }} --silent

  assembleFdroid:
    environment:
      name: appcenter.ms
      url: https://appcenter.ms/
    name: assembleFdroid
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "10.22.1"

      - name: local.properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          LOCAL_PROPERTIES_CLOUDLIB: ${{ secrets.LOCAL_PROPERTIES_CLOUDLIB }}
          LOCAL_PROPERTIES_UTILSLIB: ${{ secrets.LOCAL_PROPERTIES_UTILSLIB }}
        run: |
          echo "${LOCAL_PROPERTIES}" | base64 -d > local.properties
          echo "${LOCAL_PROPERTIES_CLOUDLIB}" | base64 -d > QuoteUnquote.cloudLib/cloudLib/local.properties
          echo "${LOCAL_PROPERTIES_UTILSLIB}" | base64 -d > QuoteUnquote.utilsLib/utilsLib/local.properties

      - name: keystore.jks
        env:
          KEYSTORE_JKS: ${{ secrets.KEYSTORE_JKS }}
        run: echo "$KEYSTORE_JKS" | base64 -d > app/keystore.jks

      - name: gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: assembleFdroid
        run: |
          set -x
          ./gradlew :app:assembleFdroid
          find . -name "*.apk" -print

      - name: show .gradle size
        run: |
          set -x
          du -h -d 1 ~/.gradle

      - name: appcenter-cli
        run: |
          set -x
          export GIT_HASH=$(git rev-parse --short HEAD)
          npm install -g yarn
          npm install -g appcenter-cli
          yarn
          appcenter login --token ${{ secrets.APPCENTER_ACCESS_TOKEN }}
          export APP_FDROID_DEBUG=app/build/outputs/apk/fdroid/debug/app-fdroid-debug.apk
          appcenter distribute release --app "jameshnsears/QuoteUnquote-Development" --file ${APP_FDROID_DEBUG} --group Collaborators --release-notes ${GIT_HASH} --token ${{ secrets.APPCENTER_ACCESS_TOKEN }} --silent
          export APP_FDROID_RELEASE_UNSIGNED=app/build/outputs/apk/fdroid/release/app-fdroid-release-unsigned.apk
          appcenter distribute release --app "jameshnsears/QuoteUnquote-Production" --file ${APP_FDROID_RELEASE_UNSIGNED} --group Collaborators --release-notes ${GIT_HASH} --token ${{ secrets.APPCENTER_ACCESS_TOKEN }} --silent
